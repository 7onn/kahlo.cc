user root;
worker_processes 1;
pid /var/run/nginx.pid;
events {
  worker_connections 1024;
}
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

  upstream webserver {
    server webserver:8080;
  }

  server {
    listen 80;
    server_name kahlo.cc;
    # server_name localhost;
    index index.html;
    root /var/html/www;
    error_log /var/log/nginx/stderr.log;

    location ~ /.well-known/acme-challenge/ {
      allow all;
    }

    location ~ / {
      try_files $uri $uri/
      # proxy_pass http://webserver$request_uri; ## needed instead the next line when first setting up certbot and letsencrypt
      # return 301 https://webserver$request_uri;
    }
  }

  server {
    listen 80;
    server_name edu.kahlo.cc;
    # server_name edu.localhost;
    index index.html;
    root /var/html/www;
    error_log /var/log/nginx/stderr.log;

    location ~ /.well-known/acme-challenge/ {
      allow all;
    }

    location ~ / {
      proxy_pass http://webserver$request_uri; ## needed instead the next line when first setting up certbot and letsencrypt
      # return 301 https://webserver$request_uri;
    }
  }
  # server {
  #   listen 443 ssl;
  #   server_name kahlo.cc;
  #   ssl_certificate /etc/letsencrypt/live/kahlo.cc/fullchain.pem;
  #   ssl_certificate_key /etc/letsencrypt/live/kahlo.cc/privkey.pem;
  #   include /etc/letsencrypt/options-ssl-nginx.conf;
  #   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  #   index index.html;
  #   root /var/html/www;
  #   error_log /var/log/nginx/stderr.log;

  #   location ~ /.well-known/acme-challenge/ {
  #     allow all;
  #   }

  #   location ~^/play {
  #     proxy_http_version 1.1;
  #     proxy_set_header Upgrade $http_upgrade;
  #     proxy_set_header Connection "upgrade"; 
  #     proxy_set_header Host $host;
  #     proxy_set_header X-Forwarded-Proto $scheme;
  #     proxy_set_header X-Forwarded-Port $server_port;
  #     proxy_pass http://webserver$request_uri;
  #   }

  #   location ~ / {
  #     proxy_pass http://webserver$request_uri;
  #   }

  # }
}

